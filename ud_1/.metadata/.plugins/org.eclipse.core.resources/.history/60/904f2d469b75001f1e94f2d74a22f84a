/* Lee uno a uno los caracteres de un fichero de texto y los muestra en pantalla.
*  El metodo read() devuelve -1 cuando no hay car�cter.
*  Debido a que el m�todo read() puede lanzar IOException, se debe incluir
*  en bloque try-catch, pero en este caso, como alternativa al try-catch,
*  en este ejemplo a�ade throws IOException al m�todo main()
*/


import java.io.*;

public class UD1_LeerFichTexto {
	
  public static void main(String[] args) throws IOException {  
	
	  String dir = ".";
		File f = new File(dir);
		String[] archivos = f.list();
		System.out.printf("Ficheros en el directorio actual: %d %n", archivos.length);
		for (int i = 0; i < archivos.length; i++) {
			File f2 = new File(f, archivos[i]);
			System.out.printf("Nombre: %s, es fichero?: %b, es directorio?: %b %n", archivos[i], f2.isFile(),
					f2.isDirectory());
		}
	
	  
	  
	  
    File fichero = new File("Fichero1.txt"); //declarar fichero
    FileReader fic = new FileReader(fichero); //crear el flujo de entrada  
    
    
    //FileReader fic = new FileReader("D:\\ADAT_CLASE\\ANTIGUO\\UNI1\\LeerFichTexto.java"); //crear el flujo de entrada  
        
    int i;
    while ((i = fic.read()) != -1) //se va leyendo un car�cter
      System.out.println( (char) i + "==>"+ i);   // (char) convierte el valor entero i a car�cter
    
    /* Se puede leer varios caracteres creando un array de caracteres
    char b[]= new char[5]; 
    while ((i = fic.read(b)) != -1)	    
		System.out.println(b); 
    */
       
    fic.close(); //cerrar fichero  
     
    
  }
}
